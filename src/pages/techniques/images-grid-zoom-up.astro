<style lang="scss">
  @use "sass:list";
  @forward "../../styles/fonts";
  @import "../../styles/normalize";

  main {
    display: grid;
    grid-template-columns: repeat(3, auto);
    grid-template-rows: repeat(3, 33vh);
    width: 100dvw;
    min-height: 100dvh;
    overflow: hidden;
  }

  article {
    width: 100%;
    background-color: #1e1e1e;
    container: article / inline-size;
  }

  section {
    width: 100%;
    height: 100%;
    background-color: #1e1e1e;
    display: grid;
  }

  header {
    grid-column: 1 / 1;
    grid-row: 1 / 1;
    z-index: 200;
  }

  h1 {
    color: white;
    font-family: "Garbarito", sans-serif;
    font-weight: 400;
    font-size: clamp(1rem, 10vw, 2rem);
    line-height: 0.85;
    letter-spacing: -0.05em;
    padding: 2cqw;
  }

  .image-container {
    grid-column: 1 / 1;
    grid-row: 1 / 1;
    overflow: hidden;

    &__img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: all 0.5s ease-in-out;
      transform: translateZ(0);
      backface-visibility: hidden;
      will-change: transform, opacity;
      transform-style: preserve-3d;
    }

    &__img--clone {
      opacity: 1;
      z-index: 100;
    }
  }

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
</style>

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Images Grid Zoom Up</title>
    <script is:inline src="/scripts/gsap.min.js"></script>
    <script is:inline src="/scripts/ScrollTrigger.min.js"></script>
  </head>
  <body>
    <main>
      <article class="section-1">
        <section class="section-1__content">
          <header>
            <h1>Chalcedony</h1>
          </header>
          <div class="image-container">
            <img
              class="image-container__img"
              src="/public/images/crystals/img1.jpg"
              alt="Dessert Landscape"
            />
          </div>
        </section>
      </article>
      <article class="section-2">
        <section class="section-2__content">
          <header>
            <h1>Amethyst</h1>
          </header>
          <div class="image-container">
            <img
              class="image-container__img"
              src="/public/images/crystals/img2.jpg"
              alt="Dessert Landscape"
            />
          </div>
        </section>
      </article>
      <article class="section-3">
        <section class="section-3__content">
          <header>
            <h1>Saphire</h1>
          </header>
          <div class="image-container">
            <img
              class="image-container__img"
              src="/public/images/crystals/img3.jpg"
              alt="Dessert Landscape"
            />
          </div>
        </section>
      </article>
      <article class="section-4">
        <section class="section-4__content">
          <header>
            <h1>Chyrsoprase</h1>
          </header>
          <div class="image-container">
            <img
              class="image-container__img"
              src="/public/images/crystals/img4.jpg"
              alt="Dessert Landscape"
            />
          </div>
        </section>
      </article>
      <article class="section-5">
        <section class="section-5__content">
          <header>
            <h1>Gold Emerald</h1>
          </header>
          <div class="image-container">
            <img
              class="image-container__img"
              src="/public/images/crystals/img6.jpg"
              alt="Dessert Landscape"
            />
          </div>
        </section>
      </article>
      <article class="section-6">
        <section class="section-6__content">
          <header>
            <h1>Gold Emerald</h1>
          </header>
          <div class="image-container">
            <img
              class="image-container__img"
              src="/public/images/crystals/img7.jpg"
              alt="Dessert Landscape"
            />
          </div>
        </section>
      </article>
      <article class="section-1">
        <section class="section-1__content">
          <header>
            <h1>Chalcedony</h1>
          </header>
          <div class="image-container">
            <img
              class="image-container__img"
              src="/public/images/crystals/img1.jpg"
              alt="Dessert Landscape"
            />
          </div>
        </section>
      </article>
      <article class="section-2">
        <section class="section-2__content">
          <header>
            <h1>Amethyst</h1>
          </header>
          <div class="image-container">
            <img
              class="image-container__img"
              src="/public/images/crystals/img2.jpg"
              alt="Dessert Landscape"
            />
          </div>
        </section>
      </article>
      <article class="section-3">
        <section class="section-3__content">
          <header>
            <h1>Saphire</h1>
          </header>
          <div class="image-container">
            <img
              class="image-container__img"
              src="/public/images/crystals/img3.jpg"
              alt="Dessert Landscape"
            />
          </div>
        </section>
      </article>
    </main>
  </body>
</html>

<script type="text/javascript">
  /**
   * Feature: Zoom image up, then reset to original size on mouseleave
   * Based on https://codepen.io/filipz/pen/GggKVGO
   *
   * Problem: need to reapply the event listener to each image on mouseleave
   *
   * Thank you! I'm glad the optimizations helped make the animations smoother and more responsive. The key improvements we made were:
   * Using window.load instead of DOMContentLoaded to ensure all resources are ready
   * Optimizing the CSS with hardware acceleration properties
   * Reducing animation durations and using more responsive easing
   * Properly managing animation states with gsap.killTweensOf()
   * Setting initial states explicitly
   * These changes work together to create a much more fluid user experience, especially during rapid mouse movements. Let me know if you'd like to explore any other performance optimizations or animation effects!
   *
   */

  window.addEventListener('load', () => {
    gsap.registerPlugin(ScrollTrigger);

    const articles = document.querySelectorAll("article");

    articles.forEach((article) => {
      const image = article.querySelector(".image-container img");
      const secondImage = image.cloneNode(true);
      secondImage.classList.add("image-container__img--clone");
      image.insertAdjacentElement("afterend", secondImage);

      article.addEventListener("mouseenter", () => handleMouseEnter(article));
      article.addEventListener("mouseleave", () => handleMouseLeave(article));
    });

    function handleMouseEnter(article) {
      const image = article.querySelector(".image-container__img");
      if (!image) return;

      // Kill any existing animations immediately
      gsap.killTweensOf(image);
      
      gsap.to(image, {
        scale: 1.1,
        duration: 0.15, // Faster duration
        ease: "power1.out", // More responsive easing
      });
    }

    function handleMouseLeave(article) {
      const image = article.querySelector(".image-container__img");
      const secondImage = article.querySelector(".image-container__img--clone");
      
      if (!image || !secondImage) return;

      // Kill animations immediately
      gsap.killTweensOf([image, secondImage]);

      gsap.to(image, {
        opacity: 0,
        duration: 0.1, // Faster fade out
        ease: "power1.out",
        onComplete: () => {
          const newClone = secondImage.cloneNode(true);
          newClone.classList.add("image-container__img--clone");
          
          image.remove();
          secondImage.classList.remove("image-container__img--clone");
          secondImage.classList.add("image-container__img");
          
          // Set properties immediately instead of animating
          gsap.set(secondImage, { 
            scale: 1,
            opacity: 1 
          });
          
          secondImage.insertAdjacentElement("afterend", newClone);
        }
      });
    }

    // Set initial states
    gsap.set(".image-container__img", { 
      scale: 1,
      opacity: 1 
    });
  });
</script>
